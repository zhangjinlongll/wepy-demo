<template>
<view class="activityWrap" wx:if="{{ pageShow }}">

  <view class="shareLoginBox" wx:if="{{ !isLogin }}">
    <view class="mask" ></view>
    <image src="{{ bg_img }}" style="position: fixed;width: inherit;height: inherit;left: 0;right: 0;top: 0;bottom: 0;z-index: 1"></image>
    <!--<image class="red_packet_bottom_bg" src=""></image>-->
    <view class="dialogBox">
      <view class="dialogHead">微信授权</view>
      <view class="dialogBody">
        <view class="">众能联合申请获得您的公开信息(头像、昵称等)</view>
      </view>
      <view class="dialogFoot">
        <button open-type="getUserInfo" bindgetuserinfo="getWxUserInfo">授权登录</button>
      </view>
    </view>
  </view>

  <!--新用户进入 授权注册-->
  <block wx:if="{{ currentStep == 0 }}">
    <view class="activityLoginBox">
      <image class="bg" src="{{ bg_img }}"></image>
      <image class="icon_logo" src="../../images/img_logo_white.png" @tap="backHome"></image>
      <viewc class="titleRules" @tap="jumpRules">规则</viewc>

      <view class="loginBox">
        <form class="coupon-form" bindsubmit="formSubmit" report-submit="true">
          <view class="activityLoginTitle">助力好友 0元租车</view>
          <view class="section">
            <input name="phone" type="number" value="{{phone}}" @input="phoneInput" placeholder="输入手机号码" maxlength="11"  cursor-spacing="70" />
            <view class="{{!isCanSend?'btn send_code':'btn send_code active'}}">
              <view wx:if="{{sendMsgDisabled}}">{{time+'秒后再次获取'}}</view>
              <view @tap="sendCode" wx:else>{{ btnName }}</view>
            </view>
          </view>
          <view class="section codeBox">
            <input class="code" name="code" type="number" placeholder="验证码" @input='codeInput' value="{{code}}" cursor-spacing="70" />
          </view>
          <view class="btn_comfire">
            <button class="button loginSubmit" formType="submit">登录后，助力好友</button>
          </view>

        </form>
      </view>

    </view>
  </block>

  <!--老用户进入 活动1-10-->
  <block wx:elif="{{ currentStep == 1 }}">
    <view class="">
      <image class="bg" src="{{ bg_img2 }}"></image>
      <image class="icon_logo" src="../../images/img_logo_white.png" @tap="backHome"></image>
      <viewc class="titleRules" @tap="jumpRules">规则</viewc>
      <view class="countDownBox">
        <view class="countDown" wx:if="{{ countDownType == 1  }}">还剩 <text>{{ countDown[0] }}</text> : <text>{{ countDown[1] }}</text> : <text>{{ countDown[2] }}</text> 结束</view>
        <view class="countDown" wx:if="{{ countDownType == 0 && countDown>0 && isEligible == 0}}">距活动资格获取仅 <text>{{ countDown }}</text> 天</view>
        <view class="countDown" wx:if="{{ countDownType == 0 && countDown>0 && isEligible == 1}}">距活动开始仅 <text>{{ countDown }}</text> 天</view>
      </view>
      <view class="activityStepBox">
        <view class="activityStep noneSucess" wx:if="{{ isEligible == 0 }}">尚未成功邀请</view>
        <view class="activityStep hasSucess"  wx:if="{{ isEligible == 1 }}">已获得活动参与资格</view>
      </view>
      <view class="modeTitle">
        <view class="line"></view>
        <view class="name">活动流程</view>
        <view class="line"></view>
      </view>
      <view class="shareBtnBox">
        <button class="shareBtn"  open-type="share" >
          <image src="../../images/but_fxhy.png"></image>
        </button>
        <button class="shareBtn" @tap="createQR">
          <image src="../../images/but_fxpyq.png"></image>
        </button>
      </view>
    </view>
  </block>

  <!--老用户进入 活动11-->
  <block wx:elif="{{ currentStep == 2 }}">
    <view class="activityBox">
      <image class="bg" src="{{ bg_img }}"></image>
      <image class="icon_logo" src="../../images/img_logo_white.png" @tap="backHome"></image>
      <viewc class="titleRules" @tap="jumpRules">规则</viewc>
      <view class="activityStepBox">
        <view class="activityStep noneSucess" wx:if="{{ isEligible == 0 }}">尚未成功邀请</view>
        <view class="activityStep hasSucess"  wx:if="{{ isEligible == 1 }}">已获得活动参与资格</view>
      </view>
      <view class="modeTitle">
        <view class="line"></view>
        <view class="name">获奖名单</view>
        <view class="line"></view>
      </view>
      <view class="emptyBox"></view>
      <view class="listBox">
        <view class="list" wx:if="{{ invitedList && invitedList.length>0 }}">
          <view class="item" wx:for="{{invitedList}}" wx:key="redPackets" wx:for-index="index" wx:for-item="item" >
            <view class="headBox">
              <image wx:if="item.avartar" class="headPic" src="{{ item.avartar }}"></image>
              <view class="headText" wx:if="{{ !item.avartar }}">?</view>
            </view>
            <text class="name">{{ item.nickNanme }}</text>
            <view class="info">
              <!--<view class="price green" wx:if="{{ item.status == 30 }}">{{ item.statusDesc }}</view>-->
              <!--<view class="price yellow" wx:else>{{ item.statusDesc }}</view>-->
              <view class="date">{{ item.regTime }}</view>
            </view>
          </view>
        </view>
      </view>
      <view class="buttonBack" @tap="backHome" wx:if="{{ isEligible == 1 }}">下单赢奖励</view>
      <view class="buttonBack" @tap="backHome" wx:if="{{ isEligible == 0 }}">返回首页</view>
    </view>
  </block>

  <!--老用户进入 活动12以后-->
  <block wx:elif="{{ currentStep == 3 }}">
    <view class="activityBox">
      <image class="bg" src="{{ bg_img }}"></image>
      <image class="icon_logo" src="../../images/img_logo_white.png" @tap="backHome"></image>
      <viewc class="titleRules" @tap="jumpRules">规则</viewc>
      <view class="activityStepBox">
        <view class="activityStep end">活动已结束</view>
      </view>
      <view class="modeTitle">
        <view class="line"></view>
        <view class="name">获奖名单</view>
        <view class="line"></view>
      </view>
      <view class="emptyBox"></view>
      <view class="listBox">
        <view class="list" wx:if="{{ invitedList && invitedList.length>0 }}">
          <view class="item" wx:for="{{invitedList}}" wx:key="redPackets" wx:for-index="index" wx:for-item="item" >
            <view class="headBox">
              <image wx:if="item.avartar" class="headPic" src="{{ item.avartar }}"></image>
              <view class="headText" wx:if="{{ !item.avartar }}">?</view>
            </view>
            <text class="name">{{ item.nickNanme }}</text>
            <view class="info">
              <!--<view class="price green" wx:if="{{ item.status == 30 }}">{{ item.statusDesc }}</view>-->
              <!--<view class="price yellow" wx:else>{{ item.statusDesc }}</view>-->
              <view class="date">{{ item.regTime }}</view>
            </view>
          </view>
        </view>
      </view>
      <view class="buttonBack" @tap="backHome">返回首页</view>
    </view>
  </block>


  <view class="shareCanvasBox" wx:if="{{ photoShow }}" @tap="closePop">
    <view class="mask"></view>
    <view class="shareCanvas">
      <image src="{{ save_photo_img }}"></image>
    </view>
    <!--<view class="tips" wx:if="{{ save_photo_img }}">已保存至本地相册，记得分享哦！</view>-->
    <!--<view class="sureBtn" wx:if="{{ save_photo_img }}">我知道了</view>-->
  </view>

</view>

</template>
<script>
  import wepy from 'wepy';
  import api from '../../api/api';
  import tip from '../../utils/tip';
  import utils from '../../utils/util';
  import {
    USER_SPECICAL_INFO,
    USER_INFO,
    USER_PHONE,
    USER_CITY,
    INVITER
  } from "../../utils/constant";

  import {
    NOTIFI_CITY_CHANGE
  } from "../../utils/notif_const";

  var WxNotificationCenter = require("../../libs/WxNotificationCenter.js");

  let randomNum = 0;
  export default class activity extends wepy.page {
    config = {
      navigationBarTitleText: '双11活动',
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTextStyle: 'black',
    };

    //分享
    onShareAppMessage(res) {
      let that= this;
      let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
      let params = {
        openId:userInfo && userInfo.userInfo && userInfo.userInfo.openId,
        type:0,
      };

      this.record('0','0'); // 记录
      return {
        title: '当天租车，0元拿走！',
        desc: '邀请有礼',
        imageUrl:"https://oss-znlhzl.oss-cn-shanghai.aliyuncs.com/mini_app_photo/activity/wx_red_share1111.jpg?v"+ randomNum,
        path: '/pages/share/activity?params='+encodeURIComponent(JSON.stringify(params))
      }
    };

    data = {
      pageShow: false,
      isLogin: false,
      currentStep:0, // 根据时间判断在第几阶段 0新用户 1双十一之前 2:双十一当天 3:双11后
      isEligible:0, // 是否有活动资格 "1"(有资格) "0"(无资格)

      openId:"",  // 邀请者openId
      type:0,// 访问链接 0为链接， 1位朋友圈
      invitedList:[], //邀请记录列表
      alertImg:'',
      bgImg:'',
      isfromHome:false, // 是否从首页来的
      qrImg:'', //二维码
      isOldUser:false,

      bg_img:'https://oss-znlhzl.oss-cn-shanghai.aliyuncs.com/mini_app_photo/activity/activity_bg1111.jpg?v'+ randomNum,
      bg_img2:'https://oss-znlhzl.oss-cn-shanghai.aliyuncs.com/mini_app_photo/activity/activity_unBegin1111.jpg?v'+ randomNum,

      phone: "",
      code: "",
      sendMsgDisabled: false,
      time: 60,
      isActive: true,
      isCanSend: false,
      btnName: "获取验证码",
      //TODO 双十一活动时间开始
      beginTime:new Date(2018,10,11,11,11,0).getTime(),
      endTime:new Date(2018,10,11,23,59,59).getTime(),
      // beginTime:new Date(2018,9,31,10,53,0).getTime(),
      // endTime:new Date(2018,10,1,23,59,59).getTime(),
      countDownType:0, // 0 天 ；1 时分秒
      countDown:null,
      countDownFn:null,

      rules:'',

      save_photo_img:'https://oss-znlhzl.oss-cn-shanghai.aliyuncs.com/mini_app_photo/activity/activity_share_pop1111.png?v'+ randomNum,
      photoShow:false, // 是否展示朋友圈图片
      interval:null
    };

    watch = {
      phone() {
        this.isCanSend = this.phone.length === 11;
        if(this.isCanSend){

        }else{
          this.time = 60;
          this.isCanSend = false;
          this.sendMsgDisabled = false;
          this.btnName = "获取验证码";
        }
      }
    };

    async onLoad(option) {
      let that = this;
      if(that.countDownFn){
        clearInterval(that.countDownFn);
      }

      let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
      let currentOpenId = userInfo && userInfo.userInfo && userInfo.userInfo.openId;
      randomNum = new Date().getHours();
      tip.loading();
      if (option &&  option.params) {
        let obj = JSON.parse(decodeURIComponent(option.params))
        this.openId = obj.openId;
        this.type = obj.type.toString();
        this.isfromHome = obj.fromUrl ? true : false;
        if(currentOpenId != this.openId){
          this.record('1',this.type); // 记录
        }
        api.znSetStorageSync(INVITER,this.openId);
      }else{
        wx.showModal({
          content: '链接出错，请联系邀请者重新邀请！',
          success: res => {
            if (res.confirm) {
              wx.navigateBack({
                delta:99
              });
            }
          }
        });
      }

      WxNotificationCenter.addNotification(NOTIFI_CITY_CHANGE, that.cityChanged, that);
      let wxUserInfo = api.znGetStorageSync(USER_INFO);
      let isLogin, isAddress;
      let isAddressAuth = true;
      if (wxUserInfo) {
        await that.setLogin();
      } else {
        that.isLogin = false;
        tip.loaded();
        that.pageShow = true;
        that.$apply();
      }
      that.$apply();

    };

    onUnload() {
      //移除通知
      let that = this;
      WxNotificationCenter.removeNotification(NOTIFI_CITY_CHANGE, that);
    }

    async init() {
      let that = this;
      let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
      let currentOpenId = userInfo && userInfo.userInfo && userInfo.userInfo.openId;

      // 如果openId 不等 且为新用户 才建立邀请关系，
      if(this.openId != currentOpenId){
        if(userInfo && userInfo.userInfo && userInfo.userInfo.isActive == 1){
        }else{
          that.bindRelation();
        }
      }

      //判断新老用户
      let isOldUser = true;
      if(userInfo && userInfo.userInfo && userInfo.userInfo.isActive == 1){
        isOldUser = true;
        that.isOldUser = true;

        //判断当前时间与11月11日的关系,且是否为新用户
        let currentTime  = new Date().getTime(); //当前时间
        let activityTime =  that.beginTime;
        let lastTime = that.endTime;
        if(currentTime < activityTime){
          that.currentStep = 1;
        }else if(currentTime>=activityTime && currentTime <= lastTime){
          that.currentStep = 2;
        }else if(currentTime>lastTime){
          that.currentStep = 3;
        }
      }else{
        that.currentStep = 0; // 设置为新用户
        isOldUser = false;
        that.isOldUser = false
      }
      that.$apply();


      // 如果是新用户，判断是否是首页来的，否则进首页
      // if(that.currentStep == 0){
      //   if(this.isfromHome){
      //     this.isfromHome =  true
      //   }else{
      //     // wx.switchTab({
      //     //   url: '/pages/main/home'
      //     // });
      //     // that.$apply();
      //     // return
      //   }
      // }

      that.$apply();
      that.isLogin = true;

      if(that.currentStep != 3){
        that.countDownFun();//倒计时
      }
      that.getInfo();
      // 绑定记录

      await that.getQR();

      tip.loaded();
      that.pageShow = true;
      that.$apply();


      console.log("currentStep",this.currentStep)
    };

    async getWxUserInfo(res) {
      let that = this;
      this.isFirstGetSen = true;
      if (res.detail.errMsg === 'getUserInfo:ok') {
        //过滤表情符号
        if(res && res.detail && res.detail.userInfo && res.detail.userInfo.nickName){
          res.detail.userInfo.nickName =  res.detail.userInfo.nickName.replace(/\uD83C[\uDF00-\uDFFF]|\uD83D[\uDC00-\uDE4F]/g, "*");
        }
        await api.znSetStorageSync(USER_INFO, res);
        await that.setLogin();
      }
    }

    async setLogin() {
      let that = this;
      let isLogin = await that.$parent.reLogin().catch(error => {
        console.log("relogin error", error);
        wx.showModal({
          content: '用户信息授权失败，请联系众能联合客服'
        });
      });
      if (!isLogin) {
        return false
      }
      let isAddress = await that.$parent.getAddress().catch(error => {
        let cityInfo = api.znGetStorageSync(USER_CITY);
        if (cityInfo) {
          return isAddress = true
        } else {
          if (error.errMsg === "getLocation:fail auth deny") {
            wx.showModal({
              content: '定位授权失败,是否打开定位授权?',
              success: res => {
                if (res.confirm) {
                  wx.openSetting();
                }
                if (res.cancel) {
                  wx.navigateTo({
                    url: '/pages/common/city_list?city=no'
                  });
                }
              }
            });
          } else {
            wx.showModal({
              content: '您当前不在服务城市，请选择服务城市',
              success: res => {
                if (res.confirm) {
                  wx.navigateTo({
                    url: '/pages/common/city_list?city=no'
                  });
                }
              }
            });
          }
        }
      });
      if (!isAddress) {
        return false
      } else if (isAddress == "getCityInServiceFalse") {
        let cityInfo = api.znGetStorageSync(USER_CITY);
        if (cityInfo) {
          isAddress = true;
        } else {
          wx.showModal({
            content: '您当前不在服务城市，请选择服务城市',
            success: res => {
              if (res.confirm) {

                wx.navigateTo({
                  url: '/pages/common/city_list?city=no'
                });
              }
            }
          });
          return false
        }
      }
      if (isLogin && isAddress) {
        that.init();
        that.$apply();
      } else if (isLogin && !isAddress) {
        wx.showModal({
          content: '您当前不在服务城市，请选择服务城市',
          success: res => {
            if (res.confirm) {
              wx.navigateTo({
                url: '/pages/common/city_list?city=no'
              });
            }
          }
        });
      } else {
        wx.showModal({
          content: '授权失败，请重新授权',
          success: res => {
            if (res.confirm) {
            }
          }
        });
      }
    }

    cityChanged(newCity) {
      let that = this.observer;
      if (newCity) {
        let cityInfo = {};
        cityInfo.city = newCity.regionName;
        cityInfo.cityName = newCity.regionName;
        cityInfo.cityCode = newCity.regionId;
        api.znSetStorageSync(USER_CITY, cityInfo)
      }
      that.init();
    }

    // 获取红包金额图，及邀请记录，及活动规则
    async getInfo(){
      let result = await api.getInvited({
        query:{
          promotionType:'11'
        }
      });
      if(result && result.data && result.data.errCode == 0){
        this.isEligible = result.data.data.isEligible;
        this.invitedList = result.data.data.invitedList && result.data.data.invitedList.length>0?result.data.data.invitedList:[{
          "regTime": "2018-11-11 11:12", // 注册时间
          "nickNanme":"???", // 微信昵称
          "avartar":"" // 微信头像
        }];

        //TODO 隐藏分享
        if(result.data.data.actStatus == 1){
          wx.hideShareMenu();
        }else{
          wx.showShareMenu();
        }
      }
      this.$apply();
    }

    //初始化获取二维码图片
    async getQR(){

      let that = this;
      let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
      let params = {
        openId:userInfo && userInfo.userInfo && userInfo.userInfo.openId,
        type:1,
      };
      let result = await api.createQrCode({
        method:"POST",
        query:{
          path: '/pages/share/activity?params='+encodeURIComponent(JSON.stringify(params))
          // path: '/pages/main/home?params='+encodeURIComponent(JSON.stringify(params))
        },
      });
      console.log( '/pages/share/activity?params='+encodeURIComponent(JSON.stringify(params)) )
      if(result && result.data && result.data.errCode == 0 ){
        that.qrImg = result.data.data.picturePath;
        console.log(result.data.data.picturePath)
      }

      that.$apply();
    }

    // 画布合成
    async  createCanvasTosave(){
      let that = this;
      let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
      //判断新老用户
      let isOldUser = true;
      if(userInfo && userInfo.userInfo && userInfo.userInfo.isActive == 1){
        isOldUser = true;
      }else{
        isOldUser = false;
      }
      // 如果是新用户，判断是否是首页来的，否则进首页
      if(!isOldUser){
        wx.switchTab({
          url: '/pages/main/home'
        });
        return false
      }

      wx.getSetting({
        success(settingdata) {
          console.log(settingdata)
          if (settingdata.authSetting["scope.writePhotosAlbum"]) {
            that.photoShow = true;
            that.$apply();
          }
        }
      });

      //tip.loading('图片保存中..');
      that.$apply();

      that.saveImg();
    }

    saveImg(){
      let that = this;
      wepy.downloadFile({
        url: that.qrImg
      }).then((res)=>{

          console.log(res);
          wx.saveImageToPhotosAlbum({
            filePath: res.tempFilePath,
            success: function (res) {

              wx.showToast({
                title: '已保存到相册'
              })
            },
            fail: function (res) {
              console.log(res)
              if (res.errMsg === "saveImageToPhotosAlbum:fail auth deny") {
                console.log("打开设置窗口");
                that.photoShow = false;
                that.$apply();

                wx.openSetting({
                  success(settingdata) {
                    console.log(settingdata)
                    if (settingdata.authSetting["scope.writePhotosAlbum"]) {
                      console.log("获取权限成功，再次点击图片保存到相册")
                      wx.showModal({
                        title: '提示',
                        content: '获取权限成功，请再次点击分享朋友圈',
                        success: res=>{
                          if (res.confirm) {

                          }
                        }
                      })
                    } else {
                      console.log("获取权限失败")
                      tip.error("获取权限失败");
                    }
                  }
                })

                that.$apply();
              }
            }
          })

      }).catch(err =>{
          wx.showToast({
            title: '保存失败，请重试'
          })
      });


      that.record('0','1'); // 邀请者访问

      that.$apply();
    }

    // 记录日志
    async record(operType,shareType){
      let that = this;
      let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
      let params = {
        "openId" : userInfo && userInfo.userInfo && userInfo.userInfo.openId,// 邀请者openId、被邀请者openId
        "oldOpenId" : that.openId, // 邀请者openId
        "operType" : operType, // 操作类型: 0:分享邀请; 1:被邀请
        "shareType" : shareType, // 分享类型: 0:分享链接; 1:分享二维码到朋友圈
        promotionType:'11'
      };
      let result = await api.inviteLog({
        method:"POST",
        query:params
      });
      if(result && result.data && result.data.errCode == 0 ){
        console.log("记录成功",params);
      }else{
        console.log("记录失败",params);
      }
    }

    // 建立绑定关系
    async bindRelation(){
      let that = this;
      let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
      let params = {
        "oldExtId": that.openId, // 邀请者openId
        "newExtId": userInfo && userInfo.userInfo && userInfo.userInfo.openId, // 被邀请者openId
        promotionType:'11'
      };
      let result = await api.inviteMapping({
        method:"POST",
        query:params
      });
      if(result && result.data && result.data.errCode == 0 ){
        console.log("建立绑定关系成功",params);
      }else{
        console.log("建立绑定关系失败",params);
      }
    }

    async sendVerifyCode() {
      let that = this;
      const json = await api.buildCode({
        method: "POST",
        query: {
          phoneNum: this.phone,
          kaptchaLen: 4
        }
      });
      if (json && json.data.errCode === 0) {
        tip.success("发送成功!");
        that.$apply();
      } else {
        this.code = "";
        this.time = 60;
        this.isCanSend = true;
        this.sendMsgDisabled = false;
        that.$apply();
        tip.error(json.data.message)
      }
    }

    async registerUser(phone, code,formId) {
      let that = this;
      tip.loading('正在提交..');
      const json = await api.buildPhone({
        method: "POST",
        query: {
          phoneNum: this.phone,
          bindType: 1,
          verifCode: this.code,
          cpsFlag:"0"
        }
      });
      if (json && json.data.errCode === 0) {

        let result = await api.getUserInfo({});
        if (result && result.data && result.data.errCode === 0) {
          let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
          userInfo.userInfo.phoneNum = that.phone;
          userInfo.userInfo.isActive = 1;
          userInfo.userInfo.userId = result.data.data.userId;
          userInfo.promInfo = {
            showCoupon:"0"
          };
          api.znSetStorageSync(USER_SPECICAL_INFO, userInfo);
          api.znSetStorageSync(USER_PHONE, userInfo.userInfo.phoneNum);

          console.log(formId);
          if(formId){
            that.$parent.msgNotification(formId)
          }

          wx.switchTab({
            url:'/pages/main/home',
            success:()=>{

            },
            fail:()=>{
              wx.switchTab({
                url:'/pages/main/home',
              })
            }
          })
        }
        that.$apply();
        tip.success('手机绑定成功')
      } else if (json.data.errCode === 1011) {
        this.code = "";
        this.time = 60;
        this.isCanSend = true;
        this.sendMsgDisabled = false;
        that.$apply();
      }


    }

    //倒计时方法
    countDownFun(){
      let that = this;
      that.countDownFn = setInterval(function () {
        var timestamp = new Date().getTime();
        var beginTime = that.beginTime;
        var endtime = that.endTime; //活动结束时间
        var oneEndTime = that.endTime-1000*60*60*24; //活动结束时间的前一天 结束时间
        var oneBeginTime = that.beginTime-1000*60*60*24; //活动结束时间的前一天 开始时间
        var hours = (utils.countdown(timestamp, beginTime).h>9?'':'0')+utils.countdown(timestamp, beginTime).h;
        var minutes = (utils.countdown(timestamp, beginTime).minutes>9?'':'0')+utils.countdown(timestamp, beginTime).minutes;
        var s =(utils.countdown(timestamp, beginTime).s>9?'':'0')+ utils.countdown(timestamp, beginTime).s;
        if(timestamp < oneBeginTime){
          that.countDown = parseInt( (beginTime - timestamp) / (24 * 60 * 60 * 1000) );
          that.countDownType = 0;
        }else if(timestamp>=oneBeginTime && timestamp <= oneEndTime){
          that.countDown = [hours,minutes,s]; //hours+':'+minutes+':'+s;
          that.countDownType = 1;
          if(hours == '00' && minutes=='00' && s=='00'){
            that.countDown = null;
            that.currentStep = 2;
            that.$apply();
          }

        }else if(timestamp>beginTime){
          that.countDown = null;
          that.countDownType = 0;
          clearInterval(that.countDownFn);
        }
        that.$apply();
      },1000);

    }

    methods = {
      createQR(){
        this.createCanvasTosave();
      },

      closePop(){
        this.photoShow = false;
        this.$apply();
      },

      backHome(){
        wx.switchTab({
          url: '/pages/main/home'
        });
      },

      clickShareBtn(){
        let userInfo = api.znGetStorageSync(USER_SPECICAL_INFO);
        //判断新老用户
        let isOldUser = true;
        if(userInfo && userInfo.userInfo && userInfo.userInfo.isActive == 1){
          isOldUser = true;
        }else{
          isOldUser = false;
        }
        // 如果是新用户，判断是否是首页来的，否则进首页
        if(!isOldUser){
          wx.switchTab({
            url: '/pages/main/home'
          });
          return false
        }
      },

      codeInput(e) {
        this.code = e.detail.value;
      },

      phoneInput(e) {
        this.phone = e.detail.value;
        if(this.interval){
          clearInterval(this.interval);
          this.interval = null;
        }
      },

      sendCode(e) {
        let reg = /^[1][0-9]{10}$/;
        if (this.phone === "") {
          tip.alert("输入手机号码");
          return false;
        }
        if (!reg.test(this.phone)) {
          tip.alert("输入正确的手机号码");
          return false;
        }
        this.isCanSend = false;
        this.sendVerifyCode();
        let that = this;
        that.sendMsgDisabled = true;
        let interval = this.interval = setInterval(() => {
          if ((that.time--) <= 0) {
            that.time = 60;
            this.isCanSend = true;
            that.sendMsgDisabled = false;
            that.btnName = "重新获取验证码";
            clearInterval(interval);
            that.$apply();
          }
          that.$apply();
        }, 1000);
      },

      formSubmit(e) {
        let that = this;
        let phone = e.detail.value.phone;
        let code = e.detail.value.code;
        if (phone === "") {
          tip.alert("输入手机号码");
          return false;
        }
        if (code === "") {
          tip.alert("输入验证码");
          return false;
        }
        console.log('e.detail.formId',e.detail.formId,e);
        that.registerUser(phone, code, e.detail.formId);
      },

      jumpRules(){
        this.$preload('rules',this.rules);
        wx.navigateTo({
          url: '/pages/share/activity_rules'
        })
      }
    }



  }
</script>
<style lang="less">
  page {
    background-image: -webkit-linear-gradient(90deg, #140033, #1D006E );
    background-image: -moz-linear-gradient(90deg, #140033, #1D006E );
    background-image: linear-gradient(90deg, #140033, #1D006E );
    position: relative;
    height: 100%;
    box-sizing:border-box;
  }

  .activityWrap{
    background-image: -webkit-linear-gradient(90deg, #140033, #1D006E );
    background-image: -moz-linear-gradient(90deg, #140033, #1D006E );
    background-image: linear-gradient(90deg, #140033, #1D006E );
    position: relative;
    min-height: 1206rpx;
    box-sizing:border-box;
    overflow: hidden;

    .shareLoginBox{
      .mask{
        position: fixed;
        z-index: 99;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        background: rgba(0,0,0,.6);
      }
      .dialogBox{
        z-index: 100;
        width: 80%;
        position: fixed;
        max-width: 300px;
        top: 45%;
        left: 50%;
        transform: translate(-50%,-50%);
        text-align: center;
        border-radius: 3px;
        overflow: hidden;
        background-color: #ffffff;
        .dialogHead{
          text-align: center;
          //font-weight: 700;
          font-size: 18px;
          padding: 0.8em 0em .2em;
          line-height: 30px;
          margin-top: 0;
          color:'#000000';
        }
        .dialogBody{
          max-height: 300px;
          overflow-y: auto;
          padding: 0.2em 1.6em .8em;
          min-height: 40px;
          font-size: 16px;
          line-height: 1.3;
          word-wrap: break-word;
          word-break: break-all;

          .content{
            font-size: 36rpx;
            color: #F94747;
            text-align: center;
            margin-top: 30rpx;
          }
          .tip{
            font-size: 30rpx;
            color: #747474;
            text-align: center;
            margin-top: 18rpx;
            padding-bottom:20rpx;
          }
          input{
            border: 1px solid #E5E5E5;
            font-size: 30rpx;
            color: #333;
            letter-spacing: 0;
            height: 80rpx;
            line-height: 80rpx;
            padding: 0 20rpx;
            text-align: left;
            &.placeholder{
              font-size: 30rpx;
              color: #757575;
            }
          }
        }
        .dialogFoot{
          position: relative;
          line-height: 48px;
          font-size: 18px;
          display: flex;
          button{
            display: block;
            flex: 1;
            color: #FF8000;
            text-decoration: none;
            border-radius: 0;
            -webkit-tap-highlight-color: rgba(0,0,0,0);
            position: relative;
            border: 0;

            &:active{
              background-color: #eee
            }
            &:after,&:before,&::after{
              border: none;
              border-radius: 0;
            }
            &.cancel{
              color: #333;
            }
            &.sure{
              &:after{
                content: " ";
                position: absolute;
                left: 0;
                top: 0;
                width: 1px;
                bottom: 0;
                border-left: 1px solid #d5d5d6;
                color: #d5d5d6;
                transform-origin: 0 0;
                transform: scaleX(.5);
              }
            }
          }
          &:after{
            content: " ";
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            height: 1px;
            border-top: 1px solid #d5d5d6;
            color: #d5d5d6;
            transform-origin: 0 0;
            transform: scaleY(.5);
          }
        }
      }

    }


    .activityLoginBox{

    }

    /*登录*/
    .loginBox{
      width: 100%;
      position: absolute;
      z-index: 2;
      top: 654rpx;
      .activityLoginTitle{
        color: #72E1FF;
        font-size: 34rpx;
        text-align: center;
        line-height: 48rpx;
      }
      .section{
        width: 520rpx;
        height: 80rpx;
        line-height: 80rpx;
        background-color: #ffffff;
        margin: 30rpx auto 0;
        border-radius: 40rpx;
        display: flex;
        flex-direction: row;
        input{
          height: 80rpx;
          line-height: 80rpx;
          padding: 0 30rpx;
          flex:1.2;
          font-size: 30rpx;
        }
        .send_code{
          padding-right: 30rpx;
          flex:0.8;
          text-align:right;
          font-size: 24rpx;
          view{
            font-size: 24rpx;
            color: #4127A1;
          }
        }
      }
      .btn_comfire{
        width: 520rpx;
        height: 80rpx;
        line-height: 80rpx;
        background-color: #3C14CC;
        margin: 30rpx auto 0;
        border-radius: 40rpx;
        button{
          color: #ffffff;
          background-color: #3C14CC;
          border-radius: 40rpx;
          height: 80rpx;
          width: 520rpx;
          line-height: 80rpx;
          font-size: 30rpx;

        }
      }

    }

    .bg{
      position: absolute;
      z-index: 1;
      width: 750rpx;
      height: 1212rpx;
      top: 0;
      left: 0;
    }

    .icon_logo{
      position: absolute;
      left: 20rpx;
      top: 35rpx;
      width: 152rpx;
      height: 44rpx;
      z-index: 2;
    }
    .titleRules{
      width: 78rpx;
      height: 30rpx;
      border-radius: 15rpx;
      text-align: center;
      line-height: 30rpx;
      font-size: 22rpx;
      color: #fff;
      border: 1px solid #ffffff;

      position: absolute;
      right: 20rpx;
      top: 35rpx;
      z-index: 2;
    }

    .countDownBox{
      position: absolute;
      z-index: 2;
      width: 100%;
      left: 0;
      top: 164rpx;
      text-align: center;
      .countDown{
        font-size: 26rpx;
        color: #ffffff;
        text{
          display: inline-block;
          min-width: 35rpx;
          padding: 0 5rpx;
          height: 34rpx;
          font-size: 26rpx;
          line-height: 34rpx;
          color: #ffffff;
          background-color: #C609FD;
          text-align: center;
        }
      }
    }

    .activityStep{
      width: 323rpx;
      height: 50rpx;
      line-height: 50rpx;
      font-size: 30rpx;
      color: #ffffff;
      border-radius: 25rpx;
      text-align: center;

      position: absolute;
      left: 50%;
      margin-left: -161rpx;
      top: 474rpx;
      z-index: 2;

      &.noneSucess{
        background-color: #969696;
      }
      &.hasSucess{
        background-color: #D807D5;
      }
      &.end{
        background-color: #969696;
      }
    }

    .modeTitle{
      height: 40rpx;
      overflow: hidden;
      position: absolute;
      z-index: 2;
      top: 574rpx;
      left: 50%;
      margin-left: -180rpx;
      display: flex;
      width: 360rpx;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      .line{
        width: 60rpx;
        height: 2rpx;
        background-color: #ffffff;
      }
      .name{
        width: 120rpx;
        text-align: center;
        font-size: 26rpx;
        line-height: 40rpx;
        color: #ffffff;
      }
    }

    .shareBtnBox{
      position: absolute;
      top: 1042rpx;
      left: 50%;
      margin-left: -295rpx;
      width: 590rpx;
      overflow: hidden;
      z-index:2;
      .shareBtn{
        float: left;
        padding: 0;
        margin: 0;
        border: 0;
        background: none;
        width: 260rpx;
        height: 66rpx;
        &:first-child{
          margin-right: 70rpx;
        }
        &:after,&:before{
          border: 0;
        }

        image{
          width: 260rpx;
          height: 66rpx;
        }
      }
    }

    .emptyBox{
      height:610rpx;
    }

    .listBox{
      border-style: solid;
      border-width: 2px;
      border-color: #cccccc;
      border-image: -webkit-linear-gradient(#48CBEF,#EA75E4) 30 30;
      border-image: -moz-linear-gradient(#48CBEF,#EA75E4) 30 30;
      border-image: linear-gradient(#48CBEF,#EA75E4) 30 30;
      -webkit-border-radius: 10px;
      -moz-border-radius: 10px;
      border-radius: 10px;
      position: relative;
      margin: 30rpx;
      z-index: 2;
      min-height:160rpx;

      .emptyTips{
        padding: 30rpx 20rpx;
        line-height: 46rpx;
        text-align: center;
        font-size: 32rpx;
        color: #999999;
      }

      .list {
        padding: 10rpx 20rpx;
        .item {
          padding:20rpx 0;
          height:auto;
          width:auto;
          line-height: 94rpx;
          overflow: hidden;
          .headBox{
            width:94rpx;
            height:94rpx;
            position: relative;
            background: #000000;
            border: 2px solid #4127A1;
            border-radius: 50%;
            margin-left:0rpx;
            float: left;

            .headPic {
              width:90rpx;
              height:90rpx;
              background:#4127A1;
              border-radius: 50%;
              position: absolute;
              left: 50%;
              top: 50%;
              margin-top: -45rpx;
              margin-left: -45rpx;
            }
            .headText{
              width:90rpx;
              height:90rpx;
              background:#4127A1;
              border-radius: 50%;
              position: absolute;
              left: 50%;
              top: 50%;
              margin: -45rpx 0 0 -45rpx;
              font-size: 40rpx;
              color: #000000;
              text-align: center;
              line-height: 90rpx;
              opacity: 0.5;
            }
          }

          .name {
            float: left;
            margin-left: 20rpx;
            font-size:30rpx;
            color: #DED1FF;
          }
          .info{
            text-align: right;
            line-height: 94rpx;
            .date{
              float: right;
              font-size:30rpx;
              color: #DED1FF;
            }
            /*.price{*/
            /*font-size: 26rpx;*/
            /*&.green{*/
            /*color: #0BB024;*/
            /*}*/
            /*&.yellow{*/
            /*color: #FF8000;*/
            /*}*/
            /*}*/
          }


        }

      }
    }

    .buttonBack{
      width: 507rpx;
      line-height: 84rpx;
      background-color:#3C14CC;
      text-align: center;
      align-self: center;
      border-radius: 42px;
      color: #ffffff;
      margin: 100rpx auto 80rpx;
      font-size: 34rpx;
      position: relative;
      z-index: 3;
    }



    .shareCanvasBox{
      position: fixed;
      left: 50%;
      margin-left: -305rpx;
      top: 50%;
      margin-top: -397rpx;
      z-index: 3;
      .mask{
        position: fixed;
        z-index: 99;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        background: rgba(0,0,0,.6);
      }
      .shareCanvas{
        position: relative;
        width:610rpx;
        height:794rpx;
        overflow: hidden;
        z-index: 100;
        image{
          width:610rpx;
          height:794rpx;
          /*background-color: #cccccc;*/
        }
        canvas{
          position: absolute;
          top: -3000px;
          left: -3000px;
        }
      }
      .tips{
        color: #163E95;
        font-size: 36rpx;
        width: 610rpx;
        height: 68rpx;
        line-height: 68rpx;
        background-color: #ffffff;
        text-align: center;
        position: relative;
        z-index: 100;
      }

      .sureBtn{
        width: 300rpx;
        height: 82rpx;
        line-height: 82rpx;
        border-radius: 41rpx;
        text-align: center;
        background-color: #FF8000;
        color: #ffffff;
        font-size: 36rpx;
        position: fixed;
        z-index: 100;
        left: 50%;
        margin-left: -150rpx;
        bottom: 12%;
      }
    }

  }
</style>
